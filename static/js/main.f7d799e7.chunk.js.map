{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Nav/NavBar2.js","components/Charts/Header.js","components/Utility/Utility.js","components/Transactions/Balance.js","components/Transactions/IncomeExpenses.js","components/Transactions/Transaction.js","components/Transactions/TransactionList.js","components/Transactions/AddTransaction.js","components/Charts/BarChart.js","components/Charts/LineChart.js","components/Charts/PieChart.js","components/Charts/RadarChart.js","components/Charts/Charts.js","pages/Home.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","NavBar2","isOpen","handleToggle","setState","className","to","onClick","this","Component","Header","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","htmlFor","onChange","target","placeholder","required","parseFloat","BarChart","changeColor","console","log","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","width","height","options","title","display","fontSize","legend","maintainAspectRatio","responsive","scales","yAxes","ticks","callback","index","values","tooltips","callbacks","tooltipItem","datasetIndex","numeral","yLabel","format","LineChart","pointBackgroundColor","pointRadius","align","position","responsiveAnimationDuration","PieChart","RadarChart","fill","pointBorderColor","Charts","context","dataIndex","dataset","Home","Fragment","App","exact","path","component","Login","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f7d799e7.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_TRANSACTIONS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload\r\n      }\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload]\r\n      }\r\n    case 'TRANSACTION_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","// import React, { createContext, useReducer } from 'react'\r\n// import AppReducer from './AppReducer'\r\n// import axios from 'axios'\r\n// //SECTION Dummy State\r\n// const intitialState = {\r\n//   transactions: [],\r\n//   error: null,\r\n//   loading: true\r\n// }\r\n\r\n// //SECTION Context\r\n// export const GlobalContext = createContext(intitialState)\r\n\r\n// //SECTION Provider\r\n// export const GlobalProvider = ({ children }) => {\r\n//   const [state, dispatch] = useReducer(AppReducer, intitialState)\r\n\r\n\r\n//   //SECTION API CAllS\r\n//   async function getTransactions() {\r\n//     try {\r\n//       const res = await axios.get('//zachs-global-server.herokuapp.com/api/v1/transactions/');\r\n//       // console.log(res);\r\n\r\n//       // @ts-ignore\r\n//       dispatch({\r\n//         type: 'GET_TRANSACTIONS',\r\n//         payload: res.data.data,\r\n//       });\r\n//     } catch (error) {\r\n//       console.log(error);\r\n\r\n//       // @ts-ignore\r\n//       dispatch({\r\n//         type: 'TRANSACTIONS_ERROR',\r\n//         // payload: error.response.data.error,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   //SECTION Actions (dispatch to the Reducer)\r\n//   async function deleteTransaction(id) {\r\n\r\n//     try {\r\n//       await axios.delete(`//zachs-global-server.herokuapp.com/api/v1/transactions/${id}`)\r\n//       // @ts-ignore\r\n//       dispatch({\r\n//         type: 'DELETE_TRANSACTION',\r\n//         payload: id\r\n//       });\r\n//     } catch (error) {\r\n//       // @ts-ignore\r\n//       dispatch({\r\n//         type: 'TRANSACTIONS_ERROR',\r\n//         // payload: error.response.data.error,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   async function addTransaction(transaction) {\r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       }\r\n//     }\r\n\r\n//     try {\r\n//       const res = await axios.post('//zachs-global-server.herokuapp.com/api/v1/transactions/', transaction, config);\r\n\r\n//       // @ts-ignore\r\n//       dispatch({\r\n//         type: 'ADD_TRANSACTION',\r\n//         payload: res.data.data\r\n//       });\r\n//     } catch (err) {\r\n//       // @ts-ignore\r\n//       dispatch({\r\n//         type: 'TRANSACTION_ERROR',\r\n//         // payload: err.response.data.error\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   //SECTION Passing Children\r\n//   return (\r\n//     <GlobalContext.Provider\r\n//       value={{\r\n//         transactions: state.transactions,\r\n//         loading: state.loading,\r\n//         error: state.error,\r\n//         getTransactions,\r\n//         deleteTransaction,\r\n//         addTransaction\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </GlobalContext.Provider>)\r\n// }\r\n\r\n\r\nimport React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  async function getTransactions() {\r\n    try {\r\n      const res = await axios.get('https://zachs-global-server.herokuapp.com/api/v1/transactions');\r\n\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'GET_TRANSACTIONS',\r\n        payload: res.data.data\r\n      });\r\n    } catch (err) {\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        // payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  async function deleteTransaction(id) {\r\n    try {\r\n      await axios.delete(`https://zachs-global-server.herokuapp.com/api/v1/transactions/${id}`);\r\n\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        // payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  async function addTransaction(transaction) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('https://zachs-global-server.herokuapp.com/api/v1/transactions', transaction, config);\r\n\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: res.data.data\r\n      });\r\n    } catch (err) {\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        // payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    error: state.error,\r\n    loading: state.loading,\r\n    getTransactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, { Component } from 'react'\r\nimport { FaAlignRight } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class NavBar2 extends Component {\r\n\r\n  state = {\r\n    isOpen: false,\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar mb-5\">\r\n        < div className=\"nav-center\" >\r\n          <div className=\"nav-header pt-3\">\r\n            <Link to=\"/React-Expense-Tracker/\"> <div className=\"logo\">\r\n              <h4>Transaction Tracker</h4>\r\n            </div>\r\n            </Link>\r\n            <button\r\n              className=\"nav-btn \"\r\n              type=\"button\"\r\n              onClick={this.handleToggle}\r\n            >\r\n              <FaAlignRight className=\"nav-icon\" />\r\n            </button>\r\n          </div>\r\n          <ul className={this.state.isOpen ? \"nav-links show-nav\" : \"nav-links\"}>\r\n            <li>\r\n              <Link to=\"/React-Expense-Tracker/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/React-Expense-Tracker/login\">login</Link>\r\n            </li>\r\n          </ul>\r\n        </div >\r\n      </nav >\r\n    )\r\n  }\r\n}\r\n","//rafc\r\nimport React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <h1>\r\n      Expense Tracker\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export function numberWithCommas(x) {\r\n  return '$' + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\nimport { numberWithCommas } from '../Utility/Utility'\r\n\r\nconst Balance = () => {\r\n\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount)\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2)\r\n\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>{numberWithCommas(total)}</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\nimport { numberWithCommas } from '../Utility/Utility';\r\n\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money-plus\">{numberWithCommas(income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money-minus\">{numberWithCommas(expense)}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\nimport { numberWithCommas } from '../Utility/Utility'\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const sign = transaction.amount < 0 ? '-' : '+'\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text} <span>{sign}{numberWithCommas(Math.abs(transaction.amount))}</span><button className=\"delete-btn\" onClick={() => deleteTransaction(transaction._id)}>X</button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nconst TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext)\r\n\r\n  useEffect(() => {\r\n    getTransactions()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => ((\r\n          <Transaction transaction={transaction} key={transaction._id} />\r\n        )))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState('')\r\n  const [amount, setAmount] = useState(0)\r\n\r\n  const { addTransaction } = useContext(GlobalContext)\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    const newTransaction = {\r\n      text,\r\n      //NOTE +amount turns string amount into number ammount\r\n      amount: +amount,\r\n    }\r\n\r\n    addTransaction(newTransaction)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <h3>Add New Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"Purchase\">\r\n          <label htmlFor=\"text\">Purchase Name:</label>\r\n          <input\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Enter Purchase here...\"\r\n            required />\r\n        </div>\r\n        <div className=\"Amount\">\r\n          <label htmlFor=\"amount\">\r\n            Amount: <br />\r\n            <small className=\"pl-3\"> * - negative expense, + positive income*</small>\r\n          </label>\r\n          <input\r\n            value={amount}\r\n            onChange={(e) => setAmount(parseFloat(e.target.value))}\r\n            type=\"number\"\r\n            placeholder=\"Enter +Amount or -Amount...\"\r\n            required />\r\n        </div>\r\n        <button className=\"btn\">Add Transaction</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react'\r\nimport numeral from 'numeral'\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { numberWithCommas } from '../Utility/Utility';\r\n\r\n\r\nexport const BarChart = ({ text, amount, changeColor }) => {\r\n\r\n  console.log(text, amount);\r\n\r\n  const data = {\r\n    labels: text,\r\n    datasets: [\r\n      {\r\n        label: 'Transactions ',\r\n        backgroundColor: changeColor,\r\n        borderColor: 'rgba(191, 148, 86, .2)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(191, 148, 86, .4)',\r\n        hoverBorderColor: 'rgba(191, 148, 86, 1)',\r\n        data: amount\r\n      }\r\n    ]\r\n  };\r\n\r\n  // let data = api.get(\"line-data\");\r\n  return (\r\n    <div id=\"charts\">\r\n      <Bar\r\n        data={data}\r\n        width={1000}\r\n        height={500}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Spending Chart',\r\n            fontSize: 25\r\n          },\r\n          legend: {\r\n            display: true,\r\n          },\r\n          maintainAspectRatio: true,\r\n          responsive: true,\r\n          scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                callback: function (value, index, values) {\r\n                  // add comma as thousand separator\r\n                  return numberWithCommas(value)\r\n                },\r\n              }\r\n            }]\r\n          },\r\n          tooltips: {\r\n            callbacks: {\r\n              label: function (tooltipItem, data) {\r\n                var label = data.datasets[tooltipItem.datasetIndex].label || ''\r\n\r\n                if (label) {\r\n                  label += ': '\r\n                }\r\n                label += numeral(tooltipItem.yLabel).format('0,0')\r\n                return label\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n// import \"chartjs-plugin-lineheight-annotation\";\r\nimport numeral from 'numeral'\r\nimport { numberWithCommas } from '../Utility/Utility';\r\n\r\n\r\n\r\nexport const LineChart = ({ text, amount, changeColor }) => {\r\n\r\n  // console.log(text, amount);\r\n\r\n  const data = {\r\n    labels: text,\r\n    datasets: [\r\n      {\r\n        label: 'Transactions',\r\n        backgroundColor: 'rgba(191, 148, 86, .2)',\r\n        borderColor: 'rgba(191, 148, 86, 1)',\r\n        borderWidth: 2,\r\n        pointBackgroundColor: changeColor,\r\n        pointRadius: 6,\r\n        // pointHitRadius: 10,\r\n        // pointBorderWidth: 6,\r\n        hoverBackgroundColor: 'rgba(204, 68, 51, .4)',\r\n        hoverBorderColor: 'rgba(204, 68, 51, .4)',\r\n        data: amount\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"line\">\r\n      <Line\r\n        data={data}\r\n        width={1000}\r\n        height={500}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Spending Chart',\r\n            fontSize: 25\r\n          },\r\n          responsive: true,\r\n          legend: {\r\n            display: true, align: 'center', position: 'top'\r\n          },\r\n          maintainAspectRatio: false,\r\n          responsiveAnimationDuration: 0,\r\n          scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                callback: function (value, index, values) {\r\n                  // add comma as thousand separator\r\n                  return numberWithCommas(value)\r\n                },\r\n              }\r\n            }]\r\n          },\r\n          tooltips: {\r\n            callbacks: {\r\n              label: function (tooltipItem, data) {\r\n                var label = data.datasets[tooltipItem.datasetIndex].label || ''\r\n\r\n                if (label) {\r\n                  label += ': '\r\n                }\r\n                label += numeral(tooltipItem.yLabel).format('0,0')\r\n                return label\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\n\r\nexport const PieChart = ({ text, amount, changeColor }) => {\r\n\r\n  // let amount = transaction.map(amount => transaction.amount)\r\n  console.log(text, amount);\r\n\r\n  const data = {\r\n    labels: [...text],\r\n    datasets: [\r\n      {\r\n        label: 'Transactions ',\r\n        backgroundColor: changeColor,\r\n        borderColor: 'rgba(191, 148, 86, .2)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(191, 148, 86, .4)',\r\n        hoverBorderColor: 'rgba(191, 148, 86, 1)',\r\n        data: amount\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Doughnut\r\n        data={data}\r\n        width={1000}\r\n        height={600}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Spending Chart',\r\n            fontSize: 25\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: 'right'\r\n          },\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          // scales: {\r\n          //   yAxes: [{\r\n          //     ticks: {\r\n          //       beginAtZero: true\r\n          //     }\r\n          //   }]\r\n          // }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\n\r\nexport const RadarChart = ({ text, amount, changeColor }) => {\r\n  const data = {\r\n\r\n    labels: text,\r\n    datasets: [\r\n      {\r\n        label: text,\r\n        fill: true,\r\n        backgroundColor: changeColor,\r\n        borderColor: 'rgba(191, 148, 86, 1)',\r\n        pointBorderColor: changeColor,\r\n        pointBackgroundColor: \"rgba(179,181,198,1)\",\r\n        data: [8.77, 55.61, 21.69, 6.62, 6.82]\r\n      },\r\n    ]\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"line\">\r\n      <Radar\r\n        data={data}\r\n        width={1000}\r\n        height={500}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: 'Spending Chart',\r\n            fontSize: 25\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          maintainAspectRatio: false,\r\n          responsive: true,\r\n          responsiveAnimationDuration: 0,\r\n\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","//NOTE https://www.chartjs.org/docs/latest/charts/line.html?h=bordercolor\r\n\r\n\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport { BarChart } from './BarChart';\r\nimport { LineChart } from './LineChart';\r\nimport { PieChart } from './PieChart';\r\nimport { RadarChart } from './RadarChart';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\n\r\nconst Charts = () => {\r\n\r\n  //SECTION Pulls data from api (Amount/Text)\r\n  const { transactions, getTransactions } = useContext(GlobalContext)\r\n\r\n  //SECTION Maps out Amounts\r\n  let amounts = transactions.map(transaction => transaction.amount)\r\n\r\n  //SECTION Maps outt Text\r\n  let text = transactions.map(transaction => transaction.text)\r\n  console.log(transactions, text, amounts);\r\n\r\n  //SECTION Changes Colors For Charts\r\n  const changeColor = (context) => {\r\n    var index = context.dataIndex;\r\n    var value = context.dataset.data[index];\r\n    return value < 0 ? 'rgba(204, 68, 51, 1)' :  // changes negative values in red\r\n      'rgba(102, 170, 51, 1)';// else changes values(positive) in red \r\n  }\r\n\r\n  useEffect(() => {\r\n    getTransactions()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"m-5\">\r\n      <h3 className=\"mx-auto\">Transaction Charts</h3>\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Line Chart</Tab>\r\n          <Tab>Bar Chart</Tab>\r\n          <Tab >Pie Chart</Tab>\r\n          <Tab >Radar Chart</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          <div className=\"chart-fluid\">\r\n            <LineChart text={text} amount={amounts} changeColor={changeColor} />\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className=\"chart-fluid\">\r\n\r\n            <BarChart text={text} amount={amounts} changeColor={changeColor} />\r\n          </div>\r\n\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className=\"chart-fluid\">\r\n\r\n            <PieChart text={text} amount={amounts} changeColor={changeColor} />\r\n          </div>\r\n\r\n        </TabPanel>\r\n        <TabPanel>\r\n          <div className=\"chart-fluid\">\r\n            <RadarChart text={text} amount={amounts} changeColor={changeColor} />\r\n          </div>\r\n\r\n        </TabPanel>\r\n      </Tabs>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n\r\n","import React from 'react'\r\nimport Header from '../components/Charts/Header'\r\nimport Balance from '../components/Transactions/Balance'\r\nimport IncomeExpenses from '../components/Transactions/IncomeExpenses'\r\nimport TransactionList from '../components/Transactions/TransactionList'\r\nimport AddTransaction from '../components/Transactions/AddTransaction'\r\nimport Charts from '../components/Charts/Charts'\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <div className=\"row\">\r\n          <div id=\"transactions\" className=\"mx-auto\">\r\n            <Header />\r\n            <Balance />\r\n            <IncomeExpenses />\r\n            <TransactionList />\r\n            <AddTransaction />\r\n          </div>\r\n          <div id=\"charts\" className=\"mx-auto \"  >\r\n            <Charts />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <h1>login</h1>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { GlobalProvider } from \"./context/GlobalState\";\n// import NavBar from './components/Nav/Navbar';\nimport NavBar2 from './components/Nav/NavBar2';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\n\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container-fluid\">\n        {/* <NavBar /> */}\n        <NavBar2 />\n        <Switch>\n          <Route exact path=\"/React-Expense-Tracker/\" component={Home} />\n          <Home />\n          <Route exact path=\"/React-Expense-Tracker/login\" component={Login} />\n\n\n        </Switch>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}