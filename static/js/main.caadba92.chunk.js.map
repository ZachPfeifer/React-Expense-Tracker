{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Utility.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","intitialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","htmlFor","onChange","target","placeholder","parseFloat","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.caadba92.chunk.js","sourcesContent":["//rafc\r\nimport React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <h1>\r\n      Expense Tracker\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'GET_TRANSACTIONS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload\r\n      }\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload]\r\n      }\r\n    case 'TRANSACTIONS_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\nimport axios from 'axios'\r\n//SECTION Dummy State\r\nconst intitialState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true\r\n}\r\n\r\n//SECTION Context\r\nexport const GlobalContext = createContext(intitialState)\r\n\r\n//SECTION Provider\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, intitialState)\r\n\r\n\r\n  //SECTION API CAllS\r\n  async function getTransactions() {\r\n    try {\r\n      const res = await axios.get('https://zachs-global-server.herokuapp.com/api/v1/transactions');\r\n\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'GET_TRANSACTIONS',\r\n        payload: res.data.data,\r\n      });\r\n    } catch (error) {\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'TRANSACTIONS_ERROR',\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  //SECTION Actions (dispatch to the Reducer)\r\n  async function deleteTransaction(id) {\r\n\r\n    try {\r\n      await axios.delete(`https://zachs-global-server.herokuapp.com/api/v1/transactions/${id}`)\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n      });\r\n    } catch (error) {\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'TRANSACTIONS_ERROR',\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function addTransaction(transaction) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    try {\r\n      const res = await axios.post('https://zachs-global-server.herokuapp.com/api/v1/transactions', transaction, config)\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: res.data.data\r\n      });\r\n    } catch (error) {\r\n      // @ts-ignore\r\n      dispatch({\r\n        type: 'TRANSACTIONS_ERROR',\r\n        payload: error.response.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  //SECTION Passing Children\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>)\r\n}","export function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from './Utility'\r\n\r\nconst Balance = () => {\r\n\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount)\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2)\r\n\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${numberWithCommas(total)}</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from './Utility';\r\n\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money-plus\">${numberWithCommas(income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money-minus\">${numberWithCommas(expense)}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { numberWithCommas } from './Utility'\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const sign = transaction.amount < 0 ? '-' : '+'\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span><button className=\"delete-btn\" onClick={() => deleteTransaction(transaction._id)}>X</button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nconst TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext)\r\n\r\n  useEffect(() => {\r\n    getTransactions()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => ((\r\n          <Transaction transaction={transaction} key={transaction._id} />\r\n        )))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState('')\r\n  const [amount, setAmount] = useState(0)\r\n\r\n  const { addTransaction } = useContext(GlobalContext)\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    const newTransaction = {\r\n      text,\r\n      //NOTE +amount turns string amount into number ammount\r\n      amount: +amount,\r\n    }\r\n\r\n    addTransaction(newTransaction)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Enter Text here...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            value={amount}\r\n            onChange={(e) => setAmount(parseFloat(e.target.value))}\r\n            type=\"number\"\r\n            placeholder=\"Enter Amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add Transaction</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from \"./context/GlobalState\";\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n\n      <div className=\"container\">\n        <Header />\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}